{"version":3,"file":"imagebuddy.umd.js","sources":["../source/ImageBuddyDebug.ts","../source/ImageBuddyEvents.ts","../source/ImageBuddyUtil.ts","../source/DOMUtil.ts","../source/ImageBuddyDOMElement.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../source/ImageBuddy.ts"],"sourcesContent":["export default class {\n\tenabled: boolean;\n\n\tconstructor(enabled = false) {\n\t\tthis.enabled = enabled;\n\t}\n\n\tdebug(...args: any[]) {\n\t\tif (this.enabled) {\n\t\t\tconsole.log(...args);\n\t\t}\n\t}\n\n\tdebugInfo(...args: any[]) {\n\t\tif (this.enabled) {\n\t\t\tconsole.info(...args);\n\t\t}\n\t}\n\n\tdebugTable(...args: any[]) {\n\t\tif (this.enabled) {\n\t\t\tconsole.table(...args);\n\t\t}\n\t}\n}\n","const events: any = {};\n\nexport default class {\n\tstatic on(event: string, listener: CallableFunction) {\n\t\tif (typeof events[event] !== 'object') {\n\t\t\tevents[event] = [];\n\t\t}\n\n\t\tevents[event].push(listener);\n\t}\n\n\tstatic emit(event: string, ...args: any[]) {\n\t\tconst eventArgs = args;\n\n\t\t// allow handlers to register themselves before executing\n\t\tsetTimeout(() => {\n\t\t\tif (typeof events[event] === 'object') {\n\t\t\t\tconst listeners = events[event].slice();\n\n\t\t\t\tfor (let i = 0; i < listeners.length; i++) {\n\t\t\t\t\tlisteners[i].apply(null, eventArgs);\n\t\t\t\t}\n\t\t\t}\n\t\t}, 0);\n\t}\n}\n","export function parseBooleanString(boolStr: string): boolean {\n\tif (boolStr.toLowerCase() === 'true') {\n\t\treturn true;\n\t}\n\n\treturn Boolean(parseInt(boolStr, 10));\n}\n","import { ImageSource, ImageSize } from './interfaces/index';\n\nexport function getPageYOffset(): number {\n\tif (typeof window.pageYOffset !== 'undefined') {\n\t\treturn window.pageYOffset;\n\t}\n\n\tconst scrollEl = document.scrollingElement || document.documentElement;\n\n\treturn scrollEl.scrollTop;\n}\n\nexport function calculateElementTopOffset(el: HTMLElement): number {\n\treturn el.getBoundingClientRect().top + getPageYOffset();\n}\n\n/**\n * Create an array of image sizes from the \"data-ib-sources\" attribute\n *\n * @param {string} rImgSources\n */\nexport function getSizesFromAttribute(rImgSources: string): ImageSource[] {\n\tif (!rImgSources.trim()) {\n\t\treturn [];\n\t}\n\n\treturn rImgSources\n\t\t.split(',')\n\t\t.map((sizeEl) => {\n\t\t\tconst [url, width, height] = sizeEl.trim().split(' ');\n\n\t\t\treturn {\n\t\t\t\turl,\n\t\t\t\twidth: parseInt(width, 10),\n\t\t\t\theight: parseInt(height, 10)\n\t\t\t};\n\t\t})\n\t\t.sort((a, b) => {\n\t\t\tif (a.width >= a.height) {\n\t\t\t\treturn a.width > b.width ? 1 : -1;\n\t\t\t}\n\n\t\t\treturn a.height > b.height ? 1 : -1;\n\t\t});\n}\n\nexport function elementIsCached(el: Element): boolean {\n\tif (!el) {\n\t\treturn false;\n\t}\n\n\tif (el.hasAttribute('data-ib-no-cache')) {\n\t\treturn false;\n\t}\n\n\tif (el.getAttribute('data-ib-cache-id')) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\nexport function shouldIgnoreElement(el: Element) {\n\treturn el.hasAttribute('data-ib-ignore');\n}\n\nexport function calculateUsabilityScore(containerWidth: number, containerHeight: number, imageWidth: number, imageHeight: number): number {\n\t// ImageBuddyUtil.debug(`container: ${containerWidth}x${containerHeight}`, `image: ${imageWidth}x${imageHeight}`);\n\n\tlet score = 1;\n\n\tif (imageWidth >= containerWidth) {\n\t\tscore *= containerWidth / imageWidth;\n\t} else {\n\t\tscore -= Math.abs(containerWidth - imageWidth);\n\t}\n\n\tif (containerHeight) {\n\t\tif (imageHeight >= containerHeight) {\n\t\t\tscore *= containerHeight / imageHeight;\n\t\t} else {\n\t\t\tscore -= Math.abs(containerHeight - imageHeight);\n\t\t}\n\t}\n\n\treturn score;\n}\n\n/**\n * Return the width of a tested element\n * This will examine a style attribute tag first and fallback to the computed style\n *\n * @param {object} el\n */\nexport function getElementWidth(el: HTMLElement): number {\n\tconst displayStyle = el.style.display ? el.style.display : window.getComputedStyle(el).display;\n\n\tif (displayStyle !== 'block' && el.parentElement) {\n\t\treturn getElementWidth(el.parentElement);\n\t}\n\n\treturn el.clientWidth;\n}\n\n/**\n * Get container dimensions of an HTML element\n *\n * @param {object} el\n * @param {bool} noHeight\n */\nexport function getContainerDimensions(el: HTMLElement, noHeight = false): ImageSize {\n\t// FIXME:\n\t// this is tricky since an IMG tag may not have a set height and we can't rely on\n\t// its container for that height value\n\t// I'm thinking the best way to tackle this is to see if the element has a height\n\t// specified -- if not we'll disregard the height value\n\t//      - how does a 100% height work with this?\n\n\t// el.clientHeight works fine on all tags except IMG\n\n\tconst displayStyle = el.style.display ? el.style.display : window.getComputedStyle(el).display;\n\n\tconst container = {\n\t\twidth: (displayStyle === 'block') ? el.clientWidth : 0,\n\t\theight: el.clientHeight ? el.clientHeight : 0 // TODO: try `parseInt(window.getComputedStyle(el).height)` here\n\t};\n\n\tif (!container.width && el.parentElement) {\n\t\tcontainer.width = getElementWidth(el.parentElement);\n\t}\n\n\tif (noHeight) {\n\t\tcontainer.height = 0;\n\t}\n\n\treturn container;\n}\n\n/**\n * Creates a dummy image element and loads the requested image URL\n * Returns a promise with the loaded image URL\n *\n * @param imageURL the image URL to load\n */\nexport function loadImage(imageURL: string): Promise<string> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst imageLoader = new Image();\n\n\t\timageLoader.onload = () => {\n\t\t\tresolve(imageLoader.src);\n\t\t};\n\n\t\timageLoader.onerror = () => {\n\t\t\treject(imageLoader.src);\n\t\t}\n\n\t\timageLoader.src = imageURL;\n\t});\n}\n\nexport function compareURLs(url1: string, url2: string): boolean {\n\tconst testUrls = [url1, url2].map(url => {\n\t\tconst anchor = document.createElement('a');\n\n\t\tanchor.href = url.toLowerCase();\n\n\t\treturn anchor.host + anchor.pathname;\n\t});\n\n\treturn testUrls[0] === testUrls[1];\n}\n","import ImageBuddyEvents from './ImageBuddyEvents';\nimport { parseBooleanString } from './ImageBuddyUtil';\nimport { calculateElementTopOffset, getSizesFromAttribute, calculateUsabilityScore, getElementWidth, getContainerDimensions, loadImage, getPageYOffset, compareURLs } from './DOMUtil';\nimport { ImageSource, ImageSize, ImageBuddyDOMElementOptions, ImageBuddyConfig, ImageBuddyOpts } from './interfaces/index';\n\n\nexport default class {\n\tel: HTMLElement;\n\tconfig: ImageBuddyConfig;\n\telType: string;\n\tsizes: ImageSource[];\n\tcurrentSize: ImageSize;\n\tloaded: boolean;\n\tisLoading: boolean;\n\toptions: ImageBuddyDOMElementOptions;\n\toffsetTop: number;\n\n\tconstructor(el: HTMLElement, ibConfig: ImageBuddyConfig, ibOpts: ImageBuddyOpts) {\n\t\tel.classList.add(ibConfig.classes.base);\n\t\tel.setAttribute('data-ib-cache-id', Math.random().toString(36).substring(7));\n\n\t\tthis.el = el;\n\t\tthis.config = ibConfig;\n\n\t\tthis.elType = el.tagName.toLowerCase();\n\t\tthis.sizes = getSizesFromAttribute(el.getAttribute(ibConfig.attributes.sources) || '');\n\t\tthis.currentSize = { width: 0, height: 0 };\n\t\tthis.loaded = false; // FIXME: figure out a way to check if images are already loaded when this array is created\n\t\tthis.isLoading = false;\n\t\tthis.options = {\n\t\t\tlazyLoad: el.hasAttribute(ibConfig.attributes.lazyLoad) ? parseBooleanString(el.getAttribute(ibConfig.attributes.lazyLoad) || '') : ibOpts.lazyLoad,\n\t\t\tlazyLoadThreshold: el.hasAttribute(ibConfig.attributes.lazyLoadThreshold) ? parseInt(el.getAttribute(ibConfig.attributes.lazyLoadThreshold) || '0', 10) : ibOpts.lazyLoadThreshold,\n\t\t\tmatchDPR: el.hasAttribute(ibConfig.attributes.matchDPR) ? parseBooleanString(el.getAttribute(ibConfig.attributes.matchDPR) || '') : ibOpts.matchDPR,\n\t\t\tnoHeight: el.hasAttribute(ibConfig.attributes.noHeight) ? el.hasAttribute(ibConfig.attributes.noHeight) : false\n\t\t};\n\t\tthis.offsetTop = calculateElementTopOffset(this.el);\n\t}\n\n\tupdateTopOffset() {\n\t\tthis.offsetTop = calculateElementTopOffset(this.el);\n\t}\n\n\t/**\n\t * Test if an item is lazy load-able\n\t *\n\t * @param {object} item\n\t */\n\tcanLazyLoad(): boolean {\n\t\tif (!this.options.lazyLoad || this.loaded) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (this.offsetTop - (getPageYOffset() + window.innerHeight) <= this.options.lazyLoadThreshold) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Choose the appropriate image and apply it to the element\n\t *\n\t * @param {object} item\n\t */\n\tasync chooseImage() {\n\t\tif (this.isLoading) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.isLoading = true;\n\n\t\tconst sizes = getSizesFromAttribute(this.el.getAttribute(this.config.attributes.sources) || '');\n\t\tconst elType = this.el.tagName.toLowerCase();\n\n\t\tif (elType === 'img' && parseInt(getComputedStyle(this.el).width || '0', 10) <= 1) {\n\t\t\tthis.el.style.width = '100%';\n\t\t}\n\n\t\tconst container = getContainerDimensions(this.el, this.options.noHeight);\n\n\t\tif (this.options.matchDPR) {\n\t\t\tcontainer.width *= window.devicePixelRatio;\n\t\t\tcontainer.height *= window.devicePixelRatio;\n\t\t}\n\n\t\tconst scoredSizes = sizes.map(size => Object.assign(size, {\n\t\t\tscore: calculateUsabilityScore(container.width, container.height, size.width, size.height)\n\t\t}));\n\n\t\tscoredSizes.sort((a, b) => a.score - b.score);\n\n\t\t// ImageBuddyUtil.debugTable(scoredSizes);\n\n\t\tconst idealImage = scoredSizes[scoredSizes.length - 1];\n\n\t\t// ImageBuddyUtil.debug(idealImage);\n\n\t\tif (compareURLs(this.el.getAttribute('src') || '', idealImage.url)) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tconst loadedImageURL = await loadImage(idealImage.url);\n\n\t\t\tif (this.el.tagName.toLowerCase() === 'img') {\n\t\t\t\tthis.el.setAttribute('src', loadedImageURL);\n\t\t\t} else {\n\t\t\t\tthis.el.style.backgroundImage = `url('${loadedImageURL}')`;\n\t\t\t}\n\n\t\t\tthis.loaded = true;\n\t\t\tthis.isLoading = false;\n\t\t\tthis.currentSize = { width: idealImage.width, height: idealImage.height };\n\t\t\tthis.el.classList.remove(this.config.classes.loading);\n\t\t\tthis.el.classList.add(this.config.classes.loaded);\n\n\t\t\tImageBuddyEvents.emit('image-loaded', this.el);\n\t\t} catch {\n\t\t\tconsole.error('error loading image', idealImage.url);\n\t\t}\n\t}\n}\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t\tthis[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\t\treturn this;\n\t\t};\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import ImageBuddyDebug from './ImageBuddyDebug';\nimport ImageBuddyDOMElement from './ImageBuddyDOMElement';\nimport ImageBuddyEvents from './ImageBuddyEvents';\nimport { elementIsCached, shouldIgnoreElement, getContainerDimensions } from './DOMUtil';\nimport { ImageBuddyOpts, ImageBuddyElements, ImageBuddyUpdateOptions, ImageBuddyConfig, IThrottleEventListenerOptions } from './interfaces/index';\n\n\nclass ImageBuddy {\n\teventsRunning: any;\n\telements: ImageBuddyElements;\n\tconfig: ImageBuddyConfig;\n\topts: ImageBuddyOpts;\n\tdebugger: ImageBuddyDebug;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param {object} opts\n\t */\n\tconstructor(opts: ImageBuddyOpts) {\n\t\tthis.eventsRunning = {};\n\t\tthis.elements = {\n\t\t\tqueue: [],\n\t\t\tloaded: []\n\t\t};\n\n\t\tthis.config = {\n\t\t\tevents: {\n\t\t\t\tresize: 'ImageBuddyResize',\n\t\t\t\tscroll: 'ImageBuddyScroll'\n\t\t\t},\n\t\t\tattributes: {\n\t\t\t\t// enabled: 'data-ib-enabled',\n\t\t\t\tsources: 'data-ib-sources',\n\t\t\t\tlazyLoad: 'data-ib-lazyload',\n\t\t\t\tlazyLoadThreshold: 'data-ib-lazyload-threshold',\n\t\t\t\tmatchDPR: 'data-ib-match-dpr',\n\t\t\t\tnoHeight: 'data-ib-no-height'\n\t\t\t},\n\t\t\tclasses: {\n\t\t\t\tbase: 'ib__image',\n\t\t\t\tloading: 'ib__image--loading',\n\t\t\t\tloaded: 'ib__image--loaded'\n\t\t\t}\n\t\t};\n\n\t\t// create default options and merge any overrides\n\t\tthis.opts = Object.assign({\n\t\t\tdebug: false,\n\t\t\tmatchDPR: true,\n\t\t\tlazyLoad: true,\n\t\t\tlazyLoadThreshold: 100\n\t\t}, opts);\n\n\t\tthis.debugger = new ImageBuddyDebug(this.opts.debug);\n\n\t\tthis.setupEventListeners();\n\t\tthis.update();\n\t}\n\n\tprocessElementQueue() {\n\t\tlet numProcessed = 0;\n\n\t\tif (!this.elements.queue.length) {\n\t\t\treturn numProcessed;\n\t\t}\n\n\t\tfor (let i = 0; i < this.elements.queue.length; i++) {\n\t\t\tconst item = this.elements.queue[i];\n\n\t\t\tif (item.options.lazyLoad && item.canLazyLoad() === false) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem.chooseImage();\n\n\t\t\t// move to loaded array\n\t\t\tthis.elements.queue.splice(i, 1);\n\t\t\tthis.elements.loaded.push(item);\n\n\t\t\ti--;\n\n\t\t\tnumProcessed++;\n\t\t}\n\n\t\treturn numProcessed;\n\t}\n\n\tupdate(opts: ImageBuddyUpdateOptions = {}) {\n\t\tconst t1 = performance.now();\n\n\t\tconst parentEl = opts.parentEl || document.documentElement;\n\t\tconst newElements = this.getElements(parentEl);\n\t\tconst updateOffsetTop = opts.updateOffsetTop || false;\n\n\t\tthis.elements.queue = this.elements.queue.concat(newElements);\n\t\tthis.debugger.debugInfo(this.elements.queue);\n\n\t\tif (updateOffsetTop) {\n\t\t\tfor (let i = 0; i < this.elements.queue.length; i++) {\n\t\t\t\tthis.elements.queue[i].updateTopOffset();\n\t\t\t}\n\t\t}\n\n\t\tconst numProcessed = this.processElementQueue();\n\t\tconst t2 = performance.now();\n\n\t\tthis.debugger.debug('ImageBuddy: update complete', `${numProcessed} elements`, `${Math.round(t2 - t1)}ms`);\n\n\t\tImageBuddyEvents.emit('update');\n\t}\n\n\t/**\n\t * Setup and throttle event listeners -- scroll & resize\n\t */\n\tsetupEventListeners() {\n\t\tthis.throttleEventListener('resize', this.resizeHandler, { passive: true });\n\t\tthis.throttleEventListener('scroll', this.scrollHandler, { passive: true });\n\t}\n\n\t/**\n\t * Get all the HTML elements configured for image selection\n\t */\n\tgetElements(parentEl: HTMLElement) {\n\t\tconst elements = [];\n\t\tconst foundEls = parentEl.querySelectorAll(`[${this.config.attributes.sources}]`);\n\n\t\tfor (let i = 0; i < foundEls.length; i++) {\n\t\t\tconst el = foundEls[i];\n\t\t\t// const offsetTop = el.getBoundingClientRect().top + (window.pageYOffset || document.documentElement.scrollTop);\n\n\t\t\t// attribute that can be used to ignore specific images when loading\n\t\t\tif (elementIsCached(el) || shouldIgnoreElement(el)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\telements.push(new ImageBuddyDOMElement(el as HTMLElement, this.config, this.opts));\n\t\t}\n\n\t\treturn elements;\n\t}\n\n\t/**\n\t * Resize handler\n\t */\n\tresizeHandler = () => {\n\t\t// cycle through loaded images and see if we need to select a different source\n\t\tfor (let i = 0; i < this.elements.loaded.length; i++) {\n\t\t\tconst item = this.elements.loaded[i];\n\t\t\tconst dimensions = getContainerDimensions(item.el, item.options.noHeight);\n\n\t\t\tif (dimensions.width > item.currentSize.width || (!item.options.noHeight && dimensions.height > item.currentSize.height)) {\n\t\t\t\tthis.debugger.debug('swapping image');\n\t\t\t\titem.chooseImage();\n\t\t\t}\n\t\t}\n\n\t\t// re-calculate top offsets for images in the queue\n\t\tfor (let i = 0; i < this.elements.queue.length; i++) {\n\t\t\tthis.elements.queue[i].updateTopOffset();\n\t\t}\n\n\t\t// load any unprocessed cache elements\n\t\tthis.processElementQueue();\n\t}\n\n\t/**\n\t * Scroll handler -- check for lazy load-able images\n\t */\n\tscrollHandler = () => {\n\t\t// lazy load images\n\t\tthis.processElementQueue();\n\t}\n\n\t/**\n\t * Setup a throttled event listener\n\t *\n\t * @param {string} name\n\t * @param {function} callback\n\t * @param {object} options\n\t */\n\tthrottleEventListener(eventName: string, callback: EventListenerOrEventListenerObject, userOptions: IThrottleEventListenerOptions) {\n\t\tconst passiveSupported = this.passiveEventListenerSupported();\n\n\t\tconst options = Object.assign(userOptions, {\n\t\t\tpassive: (typeof userOptions.passive === 'undefined') ? true : userOptions.passive,\n\t\t\tcapture: (typeof userOptions.capture === 'undefined') ? false : userOptions.capture\n\t\t});\n\n\t\tif (!this.eventsRunning) {\n\t\t\tthis.eventsRunning = {};\n\t\t}\n\n\t\tconst eventIsRunning = Object.prototype.hasOwnProperty.call(this.eventsRunning, eventName);\n\n\t\tif (!eventIsRunning) {\n\t\t\tthis.eventsRunning[eventName] = false;\n\t\t}\n\n\t\twindow.addEventListener(eventName, () => {\n\t\t\tif (this.eventsRunning[eventName]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.eventsRunning[eventName] = true;\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\twindow.dispatchEvent(new CustomEvent(`${eventName}-throttled`));\n\t\t\t\tthis.eventsRunning[eventName] = false;\n\t\t\t});\n\t\t}, passiveSupported ? options : options.capture);\n\n\t\tif (typeof callback === 'function') {\n\t\t\twindow.addEventListener(`${eventName}-throttled`, callback, passiveSupported ? options : options.capture);\n\t\t}\n\t}\n\n\tpassiveEventListenerSupported() {\n\t\t// check for passive event listener support\n\t\tlet passiveSupported = false;\n\n\t\ttry {\n\t\t\tconst options = Object.defineProperty({}, 'passive', {\n\t\t\t\tget() {\n\t\t\t\t\tpassiveSupported = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\twindow.addEventListener('test', () => {}, options);\n\t\t} catch (err) {}\n\n\t\treturn passiveSupported;\n\t}\n\n\tstatic on(event: string, listener: CallableFunction) {\n\t\tImageBuddyEvents.on(event, listener);\n\t}\n}\n\nexport default ImageBuddy;\n"],"names":["enabled","this","console","log","info","table","events","event","listener","_typeof","push","args","eventArgs","setTimeout","listeners","slice","i","length","apply","parseBooleanString","boolStr","toLowerCase","Boolean","parseInt","getPageYOffset","window","pageYOffset","document","scrollingElement","documentElement","scrollTop","calculateElementTopOffset","el","getBoundingClientRect","top","getSizesFromAttribute","rImgSources","trim","split","map","sizeEl","height","url","width","sort","a","b","elementIsCached","hasAttribute","getAttribute","shouldIgnoreElement","getContainerDimensions","noHeight","container","style","display","getComputedStyle","clientWidth","clientHeight","parentElement","getElementWidth","ibConfig","ibOpts","classList","add","classes","base","setAttribute","Math","random","toString","substring","config","elType","tagName","sizes","attributes","sources","currentSize","loaded","isLoading","options","lazyLoad","lazyLoadThreshold","matchDPR","offsetTop","innerHeight","_this2","devicePixelRatio","scoredSizes","size","Object","assign","score","containerWidth","containerHeight","imageWidth","imageHeight","abs","idealImage","testUrls","anchor","createElement","href","host","pathname","body","recover","result","imageURL","Promise","resolve","reject","imageLoader","Image","onload","src","onerror","loadedImageURL","backgroundImage","remove","loading","ImageBuddyEvents","emit","e","then","error","opts","_this","elements","item","dimensions","debugger","debug","chooseImage","queue","updateTopOffset","processElementQueue","eventsRunning","resize","scroll","ImageBuddyDebug","setupEventListeners","update","numProcessed","canLazyLoad","splice","t1","performance","now","parentEl","newElements","getElements","updateOffsetTop","concat","debugInfo","t2","round","throttleEventListener","resizeHandler","passive","scrollHandler","foundEls","querySelectorAll","ImageBuddyDOMElement","eventName","callback","userOptions","passiveSupported","passiveEventListenerSupported","capture","prototype","hasOwnProperty","call","addEventListener","requestAnimationFrame","dispatchEvent","CustomEvent","defineProperty","get","err","on"],"mappings":"6uBAGaA,yEACNA,QAAUA,kDAIXC,KAAKD,YACRE,SAAQC,iEAKLF,KAAKD,YACRE,SAAQE,mEAKLH,KAAKD,YACRE,SAAQG,kCCrBLC,EAAc,iFAGTC,EAAeC,GACK,WAAzBC,EAAOH,EAAOC,MACjBD,EAAOC,GAAS,IAGjBD,EAAOC,GAAOG,KAAKF,gCAGRD,0CAAkBI,mCAAAA,gBACvBC,EAAYD,EAGlBE,WAAW,cACmB,WAAzBJ,EAAOH,EAAOC,YACXO,EAAYR,EAAOC,GAAOQ,QAEvBC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IACrCF,EAAUE,GAAGE,MAAM,KAAMN,IAGzB,qBCvBWO,EAAmBC,SACJ,SAA1BA,EAAQC,eAILC,QAAQC,SAASH,EAAS,cCHlBI,gBACmB,IAAvBC,OAAOC,YACVD,OAAOC,aAGEC,SAASC,kBAAoBD,SAASE,iBAEvCC,mBAGDC,EAA0BC,UAClCA,EAAGC,wBAAwBC,IAAMV,aAQzBW,EAAsBC,UAChCA,EAAYC,OAIVD,EACLE,MAAM,KACNC,IAAI,SAACC,uDACwBA,EAAOH,OAAOC,MAAM,8UAA9BG,aAEZ,CACNC,SACAC,MAAOpB,cAAgB,IACvBkB,OAAQlB,SAASkB,EAAQ,OAG1BG,KAAK,SAACC,EAAGC,UACLD,EAAEF,OAASE,EAAEJ,OACTI,EAAEF,MAAQG,EAAEH,MAAQ,GAAK,EAG1BE,EAAEJ,OAASK,EAAEL,OAAS,GAAK,IAnB5B,YAuBOM,EAAgBf,WAC1BA,IAIDA,EAAGgB,aAAa,uBAIhBhB,EAAGiB,aAAa,6BAOLC,EAAoBlB,UAC5BA,EAAGgB,aAAa,2BA+CRG,EAAuBnB,OAAiBoB,0DAYjDC,EAAY,CACjBV,MAAyB,WAHLX,EAAGsB,MAAMC,QAAUvB,EAAGsB,MAAMC,QAAU9B,OAAO+B,iBAAiBxB,GAAIuB,SAGlDvB,EAAGyB,YAAc,EACrDhB,OAAQT,EAAG0B,aAAe1B,EAAG0B,aAAe,UAGxCL,EAAUV,OAASX,EAAG2B,gBAC1BN,EAAUV,eAlCIiB,EAAgB5B,SAGV,WAFAA,EAAGsB,MAAMC,QAAUvB,EAAGsB,MAAMC,QAAU9B,OAAO+B,iBAAiBxB,GAAIuB,UAEvDvB,EAAG2B,cAC3BC,EAAgB5B,EAAG2B,eAGpB3B,EAAGyB,YA2BSG,CAAgB5B,EAAG2B,gBAGlCP,IACHC,EAAUZ,OAAS,GAGbY,8BCtHKrB,EAAiB6B,EAA4BC,aACxD9B,EAAG+B,UAAUC,IAAIH,EAASI,QAAQC,MAClClC,EAAGmC,aAAa,mBAAoBC,KAAKC,SAASC,SAAS,IAAIC,UAAU,SAEpEvC,GAAKA,OACLwC,OAASX,OAETY,OAASzC,EAAG0C,QAAQrD,mBACpBsD,MAAQxC,EAAsBH,EAAGiB,aAAaY,EAASe,WAAWC,UAAY,SAC9EC,YAAc,CAAEnC,MAAO,EAAGF,OAAQ,QAClCsC,QAAS,OACTC,WAAY,OACZC,QAAU,CACdC,SAAUlD,EAAGgB,aAAaa,EAASe,WAAWM,UAAY/D,EAAmBa,EAAGiB,aAAaY,EAASe,WAAWM,WAAa,IAAMpB,EAAOoB,SAC3IC,kBAAmBnD,EAAGgB,aAAaa,EAASe,WAAWO,mBAAqB5D,SAASS,EAAGiB,aAAaY,EAASe,WAAWO,oBAAsB,IAAK,IAAMrB,EAAOqB,kBACjKC,SAAUpD,EAAGgB,aAAaa,EAASe,WAAWQ,UAAYjE,EAAmBa,EAAGiB,aAAaY,EAASe,WAAWQ,WAAa,IAAMtB,EAAOsB,SAC3IhC,WAAUpB,EAAGgB,aAAaa,EAASe,WAAWxB,WAAYpB,EAAGgB,aAAaa,EAASe,WAAWxB,gBAE1FiC,UAAYtD,EAA0B9B,KAAK+B,6DAI3CqD,UAAYtD,EAA0B9B,KAAK+B,mDAS3C/B,KAAKgF,QAAQC,UAAYjF,KAAK8E,SAI/B9E,KAAKoF,WAAa7D,IAAmBC,OAAO6D,cAAgBrF,KAAKgF,QAAQE,kEAazElF,QAAAsF,EAAKP,qCAIJA,WAAY,MAEXL,EAAQxC,EAAsBoD,EAAKvD,GAAGiB,aAAasC,EAAKf,OAAOI,WAAWC,UAAY,IAG7E,QAFAU,EAAKvD,GAAG0C,QAAQrD,eAEPE,SAASiC,iBAAiB+B,EAAKvD,IAAIW,OAAS,IAAK,KAAO,MAC1EX,GAAGsB,MAAMX,MAAQ,YAGjBU,EAAYF,EAAuBoC,EAAKvD,GAAIuD,EAAKN,QAAQ7B,UAE3DmC,EAAKN,QAAQG,WAChB/B,EAAUV,OAASlB,OAAO+D,iBAC1BnC,EAAUZ,QAAUhB,OAAO+D,sBAGtBC,EAAcd,EAAMpC,IAAI,SAAAmD,UAAQC,OAAOC,OAAOF,EAAM,CACzDG,ODpBqCC,ECoBNzC,EAAUV,MDpBoBoD,ECoBb1C,EAAUZ,ODpB4BuD,ECoBpBN,EAAK/C,MDpBmCsD,ECoB5BP,EAAKjD,ODjBjFoD,EAAQ,EAERG,GAAcF,EACjBD,GAASC,EAAiBE,EAE1BH,GAASzB,KAAK8B,IAAIJ,EAAiBE,GAGhCD,IACCE,GAAeF,EAClBF,GAASE,EAAkBE,EAE3BJ,GAASzB,KAAK8B,IAAIH,EAAkBE,IAI/BJ,SAnBgCC,EAAwBC,EAAyBC,EAAoBC,EAGxGJ,ICoBHJ,EAAY7C,KAAK,SAACC,EAAGC,UAAMD,EAAEgD,MAAQ/C,EAAE+C,YAIjCM,EAAaV,EAAYA,EAAYxE,OAAS,ODoE/CmF,EAAW,CChEAb,EAAKvD,GAAGiB,aAAa,QAAU,GAAIkD,EAAWzD,KDgEjCH,IAAI,SAAAG,OAC3B2D,EAAS1E,SAAS2E,cAAc,YAEtCD,EAAOE,KAAO7D,EAAIrB,cAEXgF,EAAOG,KAAOH,EAAOI,YAGb,KAAOL,EAAS,kCE2Y1B,SAAgBM,EAAMC,GAC5B,IACC,IAAIC,mBFtaoBC,EC1CgBV,EAAWzD,ID2C7C,IAAIoE,QAAQ,SAACC,EAASC,OACtBC,EAAc,IAAIC,MAExBD,EAAYE,OAAS,WACpBJ,EAAQE,EAAYG,MAGrBH,EAAYI,QAAU,WACrBL,EAAOC,EAAYG,MAGpBH,EAAYG,IAAMP,oBCtDXS,GAEgC,QAAlC/B,EAAKvD,GAAG0C,QAAQrD,gBACdW,GAAGmC,aAAa,MAAOmD,KAEvBtF,GAAGsB,MAAMiE,+BAA0BD,UAGpCvC,QAAS,IACTC,WAAY,IACZF,YAAc,CAAEnC,MAAOwD,EAAWxD,MAAOF,OAAQ0D,EAAW1D,UAC5DT,GAAG+B,UAAUyD,OAAOjC,EAAKf,OAAOP,QAAQwD,WACxCzF,GAAG+B,UAAUC,IAAIuB,EAAKf,OAAOP,QAAQc,QAE1C2C,EAAiBC,KAAK,eAAgBpC,EAAKvD,MCmc3C,MAAM4F,GACP,OAAOjB,QFxaiBE,EE0azB,OAAID,GAAUA,EAAOiB,KACbjB,EAAOiB,UAAK,EAAQlB,GAErBC,gBDvcL1G,QAAQ4H,MAAM,sBAAuB3B,EAAWzD,2GD2C5C0D,wCG9IM2B,2CA8HI,eAEV,IAAI/G,EAAI,EAAGA,EAAIgH,EAAKC,SAASlD,OAAO9D,OAAQD,IAAK,KAC/CkH,EAAOF,EAAKC,SAASlD,OAAO/D,GAC5BmH,EAAahF,EAAuB+E,EAAKlG,GAAIkG,EAAKjD,QAAQ7B,WAE5D+E,EAAWxF,MAAQuF,EAAKpD,YAAYnC,QAAWuF,EAAKjD,QAAQ7B,UAAY+E,EAAW1F,OAASyF,EAAKpD,YAAYrC,UAChHuF,EAAKI,SAASC,MAAM,kBACpBH,EAAKI,mBAKF,IAAItH,EAAI,EAAGA,EAAIgH,EAAKC,SAASM,MAAMtH,OAAQD,IAC/CgH,EAAKC,SAASM,MAAMvH,GAAGwH,kBAIxBR,EAAKS,0CAMU,WAEfT,EAAKS,4BAvJAC,cAAgB,QAChBT,SAAW,CACfM,MAAO,GACPxD,OAAQ,SAGJP,OAAS,CACblE,OAAQ,CACPqI,OAAQ,mBACRC,OAAQ,oBAEThE,WAAY,CAEXC,QAAS,kBACTK,SAAU,mBACVC,kBAAmB,6BACnBC,SAAU,oBACVhC,SAAU,qBAEXa,QAAS,CACRC,KAAM,YACNuD,QAAS,qBACT1C,OAAQ,2BAKLgD,KAAOpC,OAAOC,OAAO,CACzByC,OAAO,EACPjD,UAAU,EACVF,UAAU,EACVC,kBAAmB,KACjB4C,QAEEK,SAAW,IAAIS,EAAgB5I,KAAK8H,KAAKM,YAEzCS,2BACAC,qEAIDC,EAAe,MAEd/I,KAAKgI,SAASM,MAAMtH,cACjB+H,MAGH,IAAIhI,EAAI,EAAGA,EAAIf,KAAKgI,SAASM,MAAMtH,OAAQD,IAAK,KAC9CkH,EAAOjI,KAAKgI,SAASM,MAAMvH,GAE7BkH,EAAKjD,QAAQC,WAAmC,IAAvBgD,EAAKe,gBAIlCf,EAAKI,mBAGAL,SAASM,MAAMW,OAAOlI,EAAG,QACzBiH,SAASlD,OAAOrE,KAAKwH,GAE1BlH,IAEAgI,YAGMA,uCAGDjB,yDAAgC,GAChCoB,EAAKC,YAAYC,MAEjBC,EAAWvB,EAAKuB,UAAY3H,SAASE,gBACrC0H,EAActJ,KAAKuJ,YAAYF,GAC/BG,EAAkB1B,EAAK0B,kBAAmB,UAE3CxB,SAASM,MAAQtI,KAAKgI,SAASM,MAAMmB,OAAOH,QAC5CnB,SAASuB,UAAU1J,KAAKgI,SAASM,OAElCkB,MACE,IAAIzI,EAAI,EAAGA,EAAIf,KAAKgI,SAASM,MAAMtH,OAAQD,SAC1CiH,SAASM,MAAMvH,GAAGwH,sBAInBQ,EAAe/I,KAAKwI,sBACpBmB,EAAKR,YAAYC,WAElBjB,SAASC,MAAM,wCAAkCW,yBAA4B5E,KAAKyF,MAAMD,EAAKT,UAElGzB,EAAiBC,KAAK,6DAOjBmC,sBAAsB,SAAU7J,KAAK8J,cAAe,CAAEC,SAAS,SAC/DF,sBAAsB,SAAU7J,KAAKgK,cAAe,CAAED,SAAS,wCAMzDV,WACLrB,EAAW,GACXiC,EAAWZ,EAASa,4BAAqBlK,KAAKuE,OAAOI,WAAWC,cAE7D7D,EAAI,EAAGA,EAAIkJ,EAASjJ,OAAQD,IAAK,KACnCgB,EAAKkI,EAASlJ,GAIhB+B,EAAgBf,IAAOkB,EAAoBlB,IAI/CiG,EAASvH,KAAK,IAAI0J,EAAqBpI,EAAmB/B,KAAKuE,OAAQvE,KAAK8H,cAGtEE,gDA0CcoC,EAAmBC,EAA8CC,cAChFC,EAAmBvK,KAAKwK,gCAExBxF,EAAUU,OAAOC,OAAO2E,EAAa,CAC1CP,aAAyC,IAAxBO,EAAYP,SAAkCO,EAAYP,QAC3EU,aAAyC,IAAxBH,EAAYG,SAAmCH,EAAYG,UAGxEzK,KAAKyI,qBACJA,cAAgB,IAGC/C,OAAOgF,UAAUC,eAAeC,KAAK5K,KAAKyI,cAAe2B,UAG1E3B,cAAc2B,IAAa,GAGjC5I,OAAOqJ,iBAAiBT,EAAW,WAC9B9E,EAAKmD,cAAc2B,KAIvB9E,EAAKmD,cAAc2B,IAAa,EAEhCU,sBAAsB,WACrBtJ,OAAOuJ,cAAc,IAAIC,sBAAeZ,kBACxC9E,EAAKmD,cAAc2B,IAAa,MAE/BG,EAAmBvF,EAAUA,EAAQyF,SAEhB,mBAAbJ,GACV7I,OAAOqJ,2BAAoBT,gBAAuBC,EAAUE,EAAmBvF,EAAUA,EAAQyF,qEAM9FF,GAAmB,UAGhBvF,EAAUU,OAAOuF,eAAe,GAAI,UAAW,CACpDC,sBACCX,GAAmB,GACZ,KAIT/I,OAAOqJ,iBAAiB,OAAQ,aAAU7F,GACzC,MAAOmG,WAEFZ,+BAGEjK,EAAeC,GACxBkH,EAAiB2D,GAAG9K,EAAOC"}