{"version":3,"sources":["imageTools.js"],"names":["Object","assign","target","varArgs","TypeError","to","index","arguments","length","nextSource","nextKey","prototype","hasOwnProperty","call","window","CustomEvent","event","params","evtParams","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","ImageTools","_class","opts","_classCallCheck","this","eventsRunning","elementCache","config","resize","scroll","attributes","sources","lazyLoad","lazyLoadThreshold","matchDPR","noHeight","_createClass","key","value","getElements","i","item","loaded","options","canLazyLoad","update","el","offsetTop","pageYOffset","innerHeight","eventName","callback","_this","requestAnimationFrame","dispatchEvent","addEventListener","throttleEventListener","resizeHandler","bind","scrollHandler","_console2","debug","_console3","console","table","apply","foundEls","querySelectorAll","push","elType","tagName","toLowerCase","sizes","getSizes","log","getAttribute","debugInfo","displayStyle","style","display","getComputedStyle","container","width","height","clientHeight","parentElement","getElementWidth","clientWidth","rImgSources","split","map","sizeEl","_sizeEl$split","_sizeEl$split2","_slicedToArray","url","parseInt","a","b","containerWidth","containerHeight","imageWidth","imageHeight","score","Math","abs","_this2","getContainerDimensions","devicePixelRatio","size","calculateUsabilityScore","scoredSizes","sort","setAttribute","idealImage","backgroundImage","chooseImage"],"mappings":"+yBAsBK,IAnBuB,kBAAjBA,QAAOC,SACjBD,OAAOC,OAAS,SAASC,EAAQC,GAGhC,GAAe,OAAXD,EAPN,KAAA,IAAAE,WAAA,6CAI6C,KAAA,GADzCC,GAAOL,OAAOC,GAC2BK,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAA,CAC3C,GAAAG,GAAAF,UAAAD,EAEA,IAAA,OAAIJ,EAAmB,IAAA,GAAAQ,KAAAD,GAEtBT,OAAAW,UAAAC,eAAAC,KAAAJ,EAAAC,KAWGL,EAAGK,GAAWD,EAAWC,IAJ5B,MAAID,KAMF,kBAAAK,QAAAC,YAAA,CACD,GAAAA,cAAA,SAAAC,EAAAC,GACD,GAAAC,GAAAD,IAAAE,SAAA,EAAAC,YAAA,EAAAC,WAAAC,IAYKC,EAAMC,SAASC,YAAY,cAIjC,OApCDF,GAAAG,gBAAAV,EAAAE,EAAAC,QAAAD,EAAAE,WAAAF,EAAAG,QAoCQE,EAGRR,cAAYJ,UAAYG,OAAOa,MAAMhB,UATrCG,OAAMC,YAAcA,aAMnBD,OAAAc,WAAA,WAMD,QAAAC,GAAAC,GAAAC,gBAAAC,KAAAH,GAYCG,KAAKC,iBAVPD,KAAAE,gBAaEF,KAAKG,QAVPrB,QACCsB,OAAA,mBAYGC,OAAQ,oBAETC,YATFC,QAAA,kBAAkBC,SAAA,mBAafC,kBAAmB,6BAZrBC,SAAKT,oBACLU,SAAKT,sBAIHE,KAAAA,KAAQpC,OAAAC,QACRoC,OAAAA,EAFOK,UADK,EAKbJ,UAAAA,EACCG,kBAAA,KACAF,GAWDC,KAAAA,sBACAC,KAAAA,SAxCD,MAAAG,cAAAf,IAAAgB,IAAA,SAAAC,MAAA,WA4CAd,KAAAe,aAEA,KAAA,GAAAC,GAAA,EAAAA,EAAAhB,KAAAE,aAAA1B,OAAAwC,IAAA,CACA,GAAAC,GAAAjB,KAAAE,aAAAc,EAeKC,GAAKC,QAAWD,EAAKE,QAAQX,WAAuC,IAA3BR,KAAKoB,YAAYH,IAT/DjB,KAAKqB,YAALJ,OArDAJ,IAAA,cAAAC,MAAA,SA4DOG,GAgBP,SAAKA,EAAKE,QAAQX,UAAYS,EAAKC,SAI/BD,EAAKK,GAAGC,WAAazC,OAAO0C,YAAc1C,OAAO2C,cAAgBR,EAAKE,QAAQV,qBAhFlFI,IAAA,wBAAAC,MAAA,SAWFY,EAAAC,GAgEmB,GAAAC,GAAA5B,IACbA,MAACiB,cAAaT,eAAiBU,KAClClB,KAAAC,cAAAyB,IAAA,GAGD5C,OAAImC,iBAAAS,EAA4BF,WAC/BI,EAAO3B,cAAPyB,KAIDE,EAAA3B,cAAAyB,IAAA,EAEDG,sBAAA,WAmBG/C,OAAOgD,cAAc,GAAI/C,aAAe2C,EAAnB,eACrBE,EAAK3B,cAAcyB,IAAa,OAIV,kBAAbC,IApGb7C,OAAAiD,iBAAAL,EAAA,aAAAC,MAXEd,IAAA,sBAAAC,MAAA,WAwHAd,KAAKgC,sBAAsB,SAAUhC,KAAKiC,cAAcC,KAAKlC,OAtB7DlB,KAAAA,sBAAwB4C,SAAW1B,KAAAmC,cAAMD,KAAAlC,UAlGzCa,IAAA,QAAAC,MAAA,WAyGCe,GAAAA,KAAAA,KAAAA,MAAAA,CAAAA,GAAAA,IACC/C,EAAAA,SAAAA,IAAAA,MAAAA,EAAOgD,eA1GTjB,IAAA,YAAAC,MAAA,WA+GA,GAAAd,KAAIF,KAAO6B,MAAP,CAAA,GAAAS,IACHtD,EAAAA,SAAOiD,KAAPjD,MAAAA,EAAOiD,eAhHRlB,IAAA,aAAAC,MAAA,WA4IA,GAAId,KAAKF,KAAKuC,MAAO,CAAA,GAAAC,IACpBA,EAAAC,SAAQC,MAARC,MAAAH,EAAiB/D,eA7IlBsC,IAAA,cAAAC,MAAA,WAqJAd,KAAKE,eAIL,KAAK,GAFCwC,GAAWlD,SAASmD,iBAAT,IAA8B3C,KAAKG,OAAOG,WAAWC,QAArD,KAERS,EAAI,EAAGA,EAAI0B,EAASlE,OAAQwC,IAAK,CA9I5C,GAAAM,GAAAoB,EAAA1B,EAAAhB,MAAAE,aAAA0C,MAqHEtB,GAAIA,EAAiBuB,OAAAvB,EAAAwB,QAAAC,cACpBC,MAAAhD,KAAAiD,SAAQC,EAARC,aAAAnD,KAAezB,OAAAA,WAAfgC,UACAW,QAAA,EACDC,SAxHFX,SAAAc,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAE,UAAA,SAAAc,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAE,UAAAuC,cAAA/C,KAAAF,KAAAU,SAAAC,kBAAAa,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAG,mBAAAa,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAG,mBAAAT,KAAAF,KAAAW,kBAAAC,SAAAY,EAAA6B,aA0HanD,KAAAG,OAAAG,WAAAI,UAAAY,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAI,UAAAV,KAAAF,KAAAY,SACXC,WAASb,EAAKuC,aAAOrC,KAAAG,OAAAG,WAAAK,WAAAW,EAAA6B,aAAAnD,KAAAG,OAAAG,WAAAK,aAGrBX,KAAAoD,UAAApD,KAAAE,iBAzIAW,IAAA,yBAAAC,MAAA,SA+IAQ,EAAAX,GA+CA,GAAM0C,GAAe/B,EAAGgC,MAAMC,QAAUjC,EAAGgC,MAAMC,QAAUzE,OAAO0E,iBAAiBlC,GAAIiC,QAEjFE,GAvCNC,MAAoBhB,SAAfW,EAAL/B,EAAqCN,YAAK,EACzC2C,OAAMrC,EAAKoB,aAAXpB,EAAAsC,aAAA,EAWElD,OARDY,GADsBoC,QAEtBb,EAAQvB,MAAGwB,KAAQC,gBAFGzB,EAAAuC,gBAKtB3C,IACAC,EAAAA,OAAS,GAGRT,KArKHG,IAAA,kBAAAC,MAAA,SA8KDQ,GA2CC,MAAoB,UAFCA,EAAGgC,MAAMC,QAAUjC,EAAGgC,MAAMC,QAAUzE,OAAO0E,iBAAiBlC,GAAIiC,UAExDjC,EAAGuC,cAC1B7D,KAAK8D,gBAAgBxC,EAAGuC,eA/MlCvC,EAAAyC,eAXElD,IAAA,WAAAC,MAAA,SA0LAkD,GA4CA,MAAOA,GA1CPC,MAAA,KA4CEC,IAAI,SAAAC,GAAU,GAAAC,GA1Ccb,EAATU,MAAsBX,KA0C3Be,EAAAC,eAAAF,EAAA,GA1CVf,EA0CUgB,EAAA,GA1CVhB,EA0CUgB,EAAA,GA1CK/C,EA0CL+C,EAAA,EAEd,QAASE,IAAKA,EAAKb,MAAOc,SAASd,GAAQC,OAAQa,SAASb,MAzC7DD,KAAAA,SAAAA,EAAQL,GACRM,MAAAA,GAAAA,OAAWC,EAAAA,OAFZa,EAAAf,MAAAgB,EAAAhB,MAAA,GAAA,EAKKD,EAAAA,OAALiB,EAAsBf,OAAA,GAAA,OArMtB9C,IAAA,0BAAAC,MAAA,SA0MC6D,EAAAC,EAAAC,EAAAC,GACA9E,KAAAqC,MAAA,cAAAsC,EAAA,IAAAC,EAAA,UAAAC,EAAA,IAAAC,EAED,IAAAC,GAAOtB,CA2BS,OAkBZoB,IAAcF,EA1CnBI,GAAAJ,EAAAE,EA6CEE,GAASC,KAAKC,IAAIN,EAAiBE,GAGhCD,IACCE,GAAeF,EAtPtBG,GAAAH,EAAAE,EAAAC,GAAAC,KAAAC,IAAAL,EA2MqBE,IAkBHC,KAxOhBlE,IAAA,cAAAC,MAAA,SA8OU2D,GAAA,GAAAS,GAAAlF,KADRgD,EAEOhD,KAAAiD,SAAAhC,EAAAK,GAAA6B,aAAAnD,KAAAG,OAAAG,WAAAC,UACNsC,EAASc,EAAFrC,GAAaqC,QAAbZ,cAVVU,EAAAzD,KAAAmF,uBAAAlE,EAAAK,GAAAL,EAAAE,QAAAR,SA3NFM,GAAAE,QAAAT,WAAA+C,EAAAC,OAAA5E,OAAAsG,iBAAA3B,EAAAE,QAAA7E,OAAAsG,iBA6OE,IAAIL,GAAJ/B,EAAAkB,IAAA,SAAAmB,GAGCN,MAkDAM,GAAKN,MAAQG,EAAKI,wBAAwB7B,EAAUC,MAAOD,EAAUE,OAAQ0B,EAAK3B,MAAO2B,EAAK1B,QAlD9FoB,GAGAQ,GAAAC,KAAA,SAAAf,EAAAC,GAAA,MAAAD,GAAAM,MAAAL,EAAAK,QAED/E,KAAI4E,WAAAA,EAEFG,IAAAA,GAASH,EAAkBE,EAA3BtG,OAAA,EAEAuG,MAAAA,MAAAA,GAED,QAAAlC,EAqDA5B,EAAKK,GAAGmE,aAAa,MAAOC,EAAWnB,KAEvCtD,EAAKK,GAAGgC,MAAMqC,gBAAd,QAAwCD,EAAWnB,IAAnD,KAjDDtD,EAAAC,QAAA,KA5QAL,IAAA,gBAAAC,MAAA,WAoRAd,KAAAqC,MAAA,oBApRAxB,IAAA,gBAAAC,MAAA,WA4RD,IAAA,GAAAE,GAAA,EAAAA,EAAAhB,KAAAE,aAAA1B,OAAAwC,IAAA,CAqDE,GAAMC,GAAOjB,KAAKE,aAAac,EAE3BC,GAAKC,QAAWD,EAAKE,QAAQX,WAAaR,KAAKoB,YAAYH,KAxUlEjB,KAAAoD,UAAA,iBAAAnC,GAsRmBjB,KAAA4F,YAAA3E,SAjSjBpB","file":"imageTools.es5.min.js","sourcesContent":["/**\n * Object.assign polyfill for IE\n */\nif (typeof Object.assign != 'function') {\n\tObject.assign = function(target, varArgs) { // .length of function is 2\n\t\t'use strict';\n\n\t\tif (target === null) { // TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tvar to = Object(target);\n\n\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\tvar nextSource = arguments[index];\n\n\t\t\tif (nextSource !== null) { // Skip over if undefined or null\n\t\t\t\tfor (var nextKey in nextSource) {\n\t\t\t\t\t// Avoid bugs when hasOwnProperty is shadowed\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn to;\n\t};\n}\n\n/**\n * Event constructor polyfill for IE\n */\nif (typeof window.CustomEvent !== 'function') {\n\tconst CustomEvent = function(event, params) {\n\t\tconst evtParams = params || { bubbles: false, cancelable: false, detail: undefined };\n\t\tconst evt = document.createEvent('CustomEvent');\n\n\t\tevt.initCustomEvent(event, evtParams.bubbles, evtParams.cancelable, evtParams.detail);\n\n\t\treturn evt;\n\t};\n\n\tCustomEvent.prototype = window.Event.prototype;\n\n\twindow.CustomEvent = CustomEvent;\n}\n\n/**\n * ImageTools class\n */\nwindow.ImageTools = class {\n\t/**\n\t * Constructor\n\t *\n\t * @param {object} opts\n\t */\n\tconstructor(opts) {\n\t\tthis.eventsRunning = {};\n\t\tthis.elementCache = [];\n\n\t\tthis.config = {\n\t\t\tevents: {\n\t\t\t\tresize: 'imageToolsResize',\n\t\t\t\tscroll: 'imageToolsScroll'\n\t\t\t},\n\t\t\tattributes: {\n\t\t\t\t// enabled: 'data-it-enabled',\n\t\t\t\tsources: 'data-it-sources',\n\t\t\t\tlazyLoad: 'data-it-lazyload',\n\t\t\t\tlazyLoadThreshold: 'data-it-lazyload-threshold',\n\t\t\t\tmatchDPR: 'data-it-match-dpr',\n\t\t\t\tnoHeight: 'data-it-no-height'\n\t\t\t}\n\t\t};\n\n\t\tthis.opts = Object.assign({\n\t\t\tdebug: false,\n\t\t\tmatchDPR: true,\n\t\t\tlazyLoad: true,\n\t\t\tlazyLoadThreshold: 100\n\t\t}, opts);\n\n\t\t// const defaults = {\n\t\t// \tdebug: false,\n\t\t// \tmatchDPR: true,\n\t\t// \tlazyLoad: true,\n\t\t// \tlazyLoadThreshold: 100\n\t\t// };\n\n\t\t// this.opts = { ...defaults, ...opts };\n\n\t\tthis.setupEventListeners();\n\t\tthis.update();\n\t}\n\n\tupdate() {\n\t\tthis.getElements();\n\n\t\tfor (let i = 0; i < this.elementCache.length; i++) {\n\t\t\tconst item = this.elementCache[i];\n\n\t\t\tif (item.loaded || (item.options.lazyLoad && this.canLazyLoad(item) === false)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.chooseImage(item);\n\t\t}\n\t}\n\n\t/**\n\t * Test if an item is lazy load-able\n\t *\n\t * @param {object} item\n\t */\n\tcanLazyLoad(item) {\n\t\tif (!item.options.lazyLoad || item.loaded) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (item.el.offsetTop - (window.pageYOffset + window.innerHeight) <= item.options.lazyLoadThreshold) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Setup a throttled event listener\n\t *\n\t * @param {string} name\n\t * @param {function} callback\n\t */\n\tthrottleEventListener(eventName, callback) {\n\t\tif (!this.eventsRunning.hasOwnProperty(eventName)) {\n\t\t\tthis.eventsRunning[eventName] = false;\n\t\t}\n\n\t\twindow.addEventListener(eventName, () => {\n\t\t\tif (this.eventsRunning[eventName]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.eventsRunning[eventName] = true;\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\twindow.dispatchEvent(new CustomEvent(`${eventName}-throttled`));\n\t\t\t\tthis.eventsRunning[eventName] = false;\n\t\t\t});\n\t\t});\n\n\t\tif (typeof callback === 'function') {\n\t\t\twindow.addEventListener(`${eventName}-throttled`, callback);\n\t\t}\n\t}\n\n\t/**\n\t * Setup and throttle event listeners -- scroll & resize\n\t */\n\tsetupEventListeners() {\n\t\tthis.throttleEventListener('resize', this.resizeHandler.bind(this));\n\t\tthis.throttleEventListener('scroll', this.scrollHandler.bind(this));\n\t}\n\n\t/**\n\t * Print a debug message\n\t */\n\tdebug() {\n\t\tif (this.opts.debug) {\n\t\t\tconsole.log(...arguments);\n\t\t}\n\t}\n\n\tdebugInfo() {\n\t\tif (this.opts.debug) {\n\t\t\tconsole.info(...arguments);\n\t\t}\n\t}\n\n\tdebugTable() {\n\t\tif (this.opts.debug) {\n\t\t\tconsole.table(...arguments);\n\t\t}\n\t}\n\n\t/**\n\t * Get all the HTML elements configured for image selection\n\t */\n\tgetElements() {\n\t\tthis.elementCache = [];\n\n\t\tconst foundEls = document.querySelectorAll(`[${this.config.attributes.sources}]`);\n\n\t\tfor (let i = 0; i < foundEls.length; i++) {\n\t\t\tconst el = foundEls[i];\n\n\t\t\tthis.elementCache.push({\n\t\t\t\tel: el,\n\t\t\t\telType: el.tagName.toLowerCase(),\n\t\t\t\t// container: this.getContainerDimensions(el),\n\t\t\t\tsizes: this.getSizes(el.getAttribute(this.config.attributes.sources)),\n\t\t\t\tloaded: false, // FIXME: figure out a way to check if images are already loaded when this array is created\n\t\t\t\toptions: {\n\t\t\t\t\tlazyLoad: el.getAttribute(this.config.attributes.lazyLoad) ? el.getAttribute(this.config.attributes.lazyLoad).toLowerCase() === 'true' : this.opts.lazyLoad,\n\t\t\t\t\tlazyLoadThreshold: el.getAttribute(this.config.attributes.lazyLoadThreshold) ? el.getAttribute(this.config.attributes.lazyLoadThreshold) : this.opts.lazyLoadThreshold,\n\t\t\t\t\tmatchDPR: el.getAttribute(this.config.attributes.matchDPR) ? el.getAttribute(this.config.attributes.matchDPR) : this.opts.matchDPR,\n\t\t\t\t\tnoHeight: el.getAttribute(this.config.attributes.noHeight) ? el.getAttribute(this.config.attributes.noHeight) : false\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tthis.debugInfo(this.elementCache);\n\t}\n\n\t/**\n\t * Get container dimensions of an HTML element\n\t *\n\t * @param {object} el\n\t * @param {bool} noHeight\n\t */\n\tgetContainerDimensions(el, noHeight) {\n\t\t// FIXME:\n\t\t// this is tricky since an IMG tag may not have a set height and we can't rely on\n\t\t// its container for that height value\n\t\t// I'm thinking the best way to tackle this is to see if the element has a height\n\t\t// specified -- if not we'll disregard the height value\n\t\t//      - how does a 100% height work with this?\n\n\t\t// el.clientHeight works fine on all tags except IMG\n\n\t\tconst displayStyle = el.style.display ? el.style.display : window.getComputedStyle(el).display;\n\n\t\tconst container = {\n\t\t\twidth: (displayStyle == 'block') ? el.clientWidth : 0,\n\t\t\theight: el.clientHeight ? el.clientHeight : 0 // TODO: try `parseInt(window.getComputedStyle(el).height)` here\n\t\t};\n\n\t\tif (!container.width) {\n\t\t\tcontainer.width = this.getElementWidth(el.parentElement);\n\t\t}\n\n\t\tif (noHeight) {\n\t\t\tcontainer.height = 0;\n\t\t}\n\n\t\treturn container;\n\t}\n\n\t/**\n\t * Return the width of a tested element\n\t * This will examine a style attribute tag first and fallback to the computed style\n\t * \n\t * @param {object} el \n\t */\n\tgetElementWidth(el) {\n\t\tconst displayStyle = el.style.display ? el.style.display : window.getComputedStyle(el).display;\n\n\t\tif (displayStyle != 'block' && el.parentElement) {\n\t\t\treturn this.getElementWidth(el.parentElement);\n\t\t}\n\n\t\treturn el.clientWidth;\n\t}\n\n\t/**\n\t * Create an array of image sizes from the \"data-it-sources\" attribute\n\t *\n\t * @param {string} rImgSources\n\t */\n\tgetSizes(rImgSources) {\n\t\treturn rImgSources\n\t\t\t.split(';')\n\t\t\t.map(sizeEl => {\n\t\t\t\tconst [url, width, height] = sizeEl.split(',');\n\t\t\t\treturn { url: url, width: parseInt(width), height: parseInt(height) };\n\t\t\t})\n\t\t\t.sort((a, b) => {\n\t\t\t\tif (a.width >= a.height) {\n\t\t\t\t\treturn a.width > b.width ? 1 : -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn a.height > b.height ? 1 : -1;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tcalculateUsabilityScore(containerWidth, containerHeight, imageWidth, imageHeight) {\n\t\tthis.debug(`container: ${containerWidth}x${containerHeight}`, `image: ${imageWidth}x${imageHeight}`);\n\n\t\tlet score = 1;\n\n\t\tif (imageWidth >= containerWidth) {\n\t\t\tscore *= containerWidth / imageWidth;\n\t\t} else {\n\t\t\tscore -= Math.abs(containerWidth - imageWidth);\n\t\t}\n\n\t\tif (containerHeight) {\n\t\t\tif (imageHeight >= containerHeight) {\n\t\t\t\tscore *= containerHeight / imageHeight;\n\t\t\t} else {\n\t\t\t\tscore -= Math.abs(containerHeight - imageHeight);\n\t\t\t}\n\t\t}\n\n\t\t// const isLandscape = containerWidth > containerHeight;\n\t\t\n\t\t// let containerRatio = isLandscape ? containerWidth / containerHeight : containerHeight / containerWidth;\n\t\t// let imageRatio = isLandscape ? imageWidth / imageHeight : imageHeight / imageWidth;\n\t\t//\n\t\t// let ratioTest = Math.abs(containerRatio - imageRatio);\n\t\t// let widthTest = isLandscape ? Math.abs(imageWidth - containerWidth) : Math.abs(imageHeight - containerHeight);\n\t\t// let widthTest = isLandscape ? imageWidth - containerWidth : imageHeight - containerHeight;\n\t\t// size.score = widthTest * ratioTest;\n\n\t\t// size.containerRatio = containerRatio;\n\t\t// size.imageRatio = imageRatio;\n\t\t// size.ratioTest = ratioTest*10;\n\t\t// size.widthTest = widthTest/10;\n\n\t\t// size.score = 100 - size.widthTest - size.ratioTest;\n\n\t\treturn score;\n\t}\n\n\t/**\n\t * Choose the appropriate image and apply it to the element\n\t *\n\t * @param {object} item\n\t */\n\tchooseImage(item) {\n\t\tconst sizes = this.getSizes(item.el.getAttribute(this.config.attributes.sources));\n\t\tconst elType = item.el.tagName.toLowerCase();\n\n\t\tconst container = this.getContainerDimensions(item.el, item.options.noHeight);\n\n\t\tif (item.options.matchDPR) {\n\t\t\tcontainer.width *= window.devicePixelRatio;\n\t\t\tcontainer.height *= window.devicePixelRatio;\n\t\t}\n\n\t\tconst scoredSizes = sizes.map((size) => {\n\t\t\tsize.score = this.calculateUsabilityScore(container.width, container.height, size.width, size.height);\n\n\t\t\treturn size;\n\t\t});\n\n\t\tscoredSizes.sort((a, b) => a.score - b.score);\n\n\t\tthis.debugTable(scoredSizes);\n\n\t\tconst idealImage = scoredSizes[scoredSizes.length-1];\n\n\t\tthis.debug(idealImage);\n\n\t\tif (elType === 'img') {\n\t\t\titem.el.setAttribute('src', idealImage.url);\n\t\t} else {\n\t\t\titem.el.style.backgroundImage = `url('${idealImage.url}')`;\n\t\t}\n\n\t\titem.loaded = true;\n\t}\n\n\t/**\n\t * Resize handler\n\t */\n\tresizeHandler() {\n\t\t// update container sizes\n\t\tthis.debug('resizeHandler');\n\t}\n\n\t/**\n\t * Scroll handler -- check for lazy load-able images\n\t */\n\tscrollHandler() {\n\t\t// lazy load images\n\t\tfor (let i = 0; i < this.elementCache.length; i++) {\n\t\t\tconst item = this.elementCache[i];\n\n\t\t\tif (item.loaded || (item.options.lazyLoad && !this.canLazyLoad(item))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tthis.debugInfo('choosing image', item);\n\n\t\t\tthis.chooseImage(item);\n\t\t}\n\t}\n}\n"]}